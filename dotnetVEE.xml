<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dotnetVEE</name>
    </assembly>
    <members>
        <member name="T:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException">
            <summary>
            An error, representing an unsupported video format.
            </summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException.FormatName">
            <summary>
            Name of the unsupported video format.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException" /> class.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException" /> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Abstractions.Exceptions.UnsupportedVideoFormatException" /> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="formatName">Format name.</param>
        </member>
        <member name="T:dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles">
            <summary>
            An enum consisting of options when it comes to deleting generated
            files by an utility.
            </summary>
        </member>
        <member name="F:dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles.None">
            <summary>
            Do not delete any generated files - leave them as is.
            </summary>
        </member>
        <member name="F:dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles.VideoOnly">
            <summary>
            Delete just the generated video - any changes will be made to
            the original video.
            </summary>
        </member>
        <member name="F:dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles.FramesDirectoryOnly">
            <summary>
            Delete just the frames directory.
            </summary>
        </member>
        <member name="F:dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles.Both">
            <summary>
            Delete both the generated video and the frames directory - any changes
            will be made to the original video.
            </summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames">
            <summary>
            Specifies names for different generated files by some utility.
            </summary>
            <param name="FramesDirectoryName">Name of the generated frames directory (if present).</param>
            <param name="FramesDirectoryFullPath">Full path to the generated frames directory (if present).</param>
            <param name="VideoFileName">Name of the generated video file (if present).</param>
            <param name="VideoFileFullPath">Full path to the generated video file (if present).</param>
        </member>
        <member name="M:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Specifies names for different generated files by some utility.
            </summary>
            <param name="FramesDirectoryName">Name of the generated frames directory (if present).</param>
            <param name="FramesDirectoryFullPath">Full path to the generated frames directory (if present).</param>
            <param name="VideoFileName">Name of the generated video file (if present).</param>
            <param name="VideoFileFullPath">Full path to the generated video file (if present).</param>
        </member>
        <member name="P:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames.FramesDirectoryName">
            <summary>Name of the generated frames directory (if present).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames.FramesDirectoryFullPath">
            <summary>Full path to the generated frames directory (if present).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames.VideoFileName">
            <summary>Name of the generated video file (if present).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames.VideoFileFullPath">
            <summary>Full path to the generated video file (if present).</summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.FileGeneration.IGeneratesFiles">
            <summary>
            Specifies a utility that can generate files.
            </summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FileGeneration.IGeneratesFiles.FileNames">
            <summary>
            File names that the utility generated.
            </summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.FontInfo">
            <summary>
            Represents information about a font.
            </summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FontInfo.FontPath">
            <summary>
            Path to the font.
            </summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.FontInfo.Font">
            <summary>
            The actual font.
            </summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.IOptionCanDraw">
            <summary>
            Specifies an options struct that can draw on an image
            using its existing properties in its instance.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.IOptionCanDraw.DrawOn(SixLabors.ImageSharp.Image)">
            <summary>
            Draws the options struct on an image, with parameters being
            the properties with appropriate values in that instance.
            </summary>
            <param name="image">Image to draw on.</param>
        </member>
        <member name="T:dotnetVEE.Abstractions.IUtility">
            <summary>
            Represents a utility - that is, a task that makes changes to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.IUtility.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <summary>
            Runs this utility.
            </summary>
            <param name="vid">The video context.</param>
            <param name="progress">The constantly updating progress of this utility.</param>
        </member>
        <member name="T:dotnetVEE.Abstractions.RgbaRF">
            <summary>
            Represents a simple RGBA Record of Floats (abbreviated to RgbaRF).
            </summary>
            <param name="R">The R field (Red).</param>
            <param name="G">The G field (Green).</param>
            <param name="B">The B field (Blue).</param>
            <param name="A">The A field (Alpha).</param>
        </member>
        <member name="M:dotnetVEE.Abstractions.RgbaRF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Represents a simple RGBA Record of Floats (abbreviated to RgbaRF).
            </summary>
            <param name="R">The R field (Red).</param>
            <param name="G">The G field (Green).</param>
            <param name="B">The B field (Blue).</param>
            <param name="A">The A field (Alpha).</param>
        </member>
        <member name="P:dotnetVEE.Abstractions.RgbaRF.R">
            <summary>The R field (Red).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.RgbaRF.G">
            <summary>The G field (Green).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.RgbaRF.B">
            <summary>The B field (Blue).</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.RgbaRF.A">
            <summary>The A field (Alpha).</summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.RgbaRFExtensions">
            <summary>
            Extensions for <see cref="T:dotnetVEE.Abstractions.RgbaRF" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.RgbaRFExtensions.ToSixLaborsRgba32(dotnetVEE.Abstractions.RgbaRF)">
            <summary>
            Converts the instance of <see cref="T:dotnetVEE.Abstractions.RgbaRF" /> to <see cref="T:SixLabors.ImageSharp.PixelFormats.Rgba32" />.
            </summary>
            <param name="rf">The instance of <see cref="T:dotnetVEE.Abstractions.RgbaRF" /> to convert.</param>
            <returns>An instance of the <see cref="T:SixLabors.ImageSharp.PixelFormats.Rgba32" /> struct from SixLabors.ImageSharp, converted from <see cref="T:dotnetVEE.Abstractions.RgbaRF" />.</returns>
        </member>
        <member name="T:dotnetVEE.Abstractions.Serialization.IBinarySerializable">
            <summary>
            Represents a class whose contents can be serialized into
            a binary writer.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.Serialization.IBinarySerializable.BinarySerialize(System.IO.BinaryWriter)">
            <summary>
            Serializes a class to a <see cref="T:System.IO.BinaryReader" />.
            </summary>
            <param name="bw"><see cref="T:System.IO.BinaryWriter" /> where binary data will serialize to.</param>
        </member>
        <member name="T:dotnetVEE.Abstractions.StartEndTimestamp">
            <summary>
            Represents a group of two timestamps to represent start-and-end.
            </summary>
            <param name="Start">Start timestamp.</param>
            <param name="End">End timestamp.</param>
        </member>
        <member name="M:dotnetVEE.Abstractions.StartEndTimestamp.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Represents a group of two timestamps to represent start-and-end.
            </summary>
            <param name="Start">Start timestamp.</param>
            <param name="End">End timestamp.</param>
        </member>
        <member name="P:dotnetVEE.Abstractions.StartEndTimestamp.Start">
            <summary>Start timestamp.</summary>
        </member>
        <member name="P:dotnetVEE.Abstractions.StartEndTimestamp.End">
            <summary>End timestamp.</summary>
        </member>
        <member name="T:dotnetVEE.Abstractions.UtilitySpecific.Exceptions.UtilityException">
            <summary>
            Represents an exception thrown from a utility.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.UtilitySpecific.Exceptions.UtilityException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Abstractions.UtilitySpecific.Exceptions.UtilityException" /> class.
            </summary>
        </member>
        <member name="M:dotnetVEE.Abstractions.UtilitySpecific.Exceptions.UtilityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Abstractions.UtilitySpecific.Exceptions.UtilityException" /> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.AudioFx">
            <summary>
            Provides methods to manipulate audio files directly.
            </summary>
            <remarks>
            <see cref="T:dotnetVEE.Computation.Audio.AudioFx" /> only applies to audio files, like MP3, WAV, OGG, etc.
            To modify audio playing inside a video, you need to:<br />
            <list type="bullet">
                <item>1. Extract audio</item>
                <item>2. Mute that part</item>
                <item>3. Manipulate the extracted audio file with this class</item>
                <item>4. Add it back</item>
            </list>
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.GetAudioExtension(System.String)">
            <summary>
            Gets the file extension of the audio file.
            </summary>
            <param name="audioFile">Input audio file.</param>
            <returns>The extension of the audio file represented as a string.</returns>
            <exception cref="T:dotnetVEE.Computation.Audio.InvalidAudioFileException">Thrown when the file doesn't seem to have an extension.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.ConvertExtensionToKind(System.String)">
            <summary>
            Converts the file extension of the video to an <see cref="T:dotnetVEE.Computation.Audio.AudioKind" /> enum.
            </summary>
            <param name="extension">File extension of the audio. Period characters will be automatically deleted.</param>
            <returns>File extension represented in <see cref="T:dotnetVEE.Computation.Audio.AudioKind" />, or <see langword="NULL" /> if it's unsupported.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the extension contains different characters than [A-Z 0-9].</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Concatenate(System.String,System.String,System.String)">
            <summary>
            Concatenates the first audio file, <paramref name="destination" />,
            with <paramref name="source" /> and saves it as <paramref name="output" />.
            </summary>
            <param name="destination">Destination audio file: where source will be concatenated.</param>
            <param name="source">Source audio file: audio file to concatenate to destination.</param>
            <param name="output">Output audio file name.</param>
            <remarks>
                If the output file name exists, it will be overwritten.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Concatenate(dotnetVEE.Computation.Audio.AudioInfo,System.String,System.String)">
            <summary>
            Concatenates the first audio file, <paramref name="destination" />,
            with <paramref name="source" /> and saves it as <paramref name="output" />.
            </summary>
            <param name="destination">Destination audio file: where source will be concatenated.</param>
            <param name="source">Source audio file: audio file to concatenate to destination.</param>
            <param name="output">Output audio file name.</param>
            <remarks>
                If the output file name exists, it will be overwritten.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Concatenate(System.String,dotnetVEE.Computation.Audio.AudioInfo,System.String)">
            <summary>
            Concatenates the first audio file, <paramref name="destination" />,
            with <paramref name="source" /> and saves it as <paramref name="output" />.
            </summary>
            <param name="destination">Destination audio file: where source will be concatenated.</param>
            <param name="source">Source audio file: audio file to concatenate to destination.</param>
            <param name="output">Output audio file name.</param>
            <remarks>
                If the output file name exists, it will be overwritten.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Concatenate(dotnetVEE.Computation.Audio.AudioInfo,dotnetVEE.Computation.Audio.AudioInfo,System.String)">
            <summary>
            Concatenates the first audio file, <paramref name="destination" />,
            with <paramref name="source" /> and saves it as <paramref name="output" />.
            </summary>
            <param name="destination">Destination audio file: where source will be concatenated.</param>
            <param name="source">Source audio file: audio file to concatenate to destination.</param>
            <param name="output">Output audio file name.</param>
            <remarks>
                If the output file name exists, it will be overwritten.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Tempo(System.String,System.Single,System.String)">
            <summary>
            Alters the tempo of an audio. That is, speeding up the
            audio without affecting the pitch.
            </summary>
            <param name="source">The source audio file.</param>
            <param name="by">Percentage of the tempo effect. Default is 100%. For instance, to speed up the audio by 1.5x, use the value 150.0.</param>
            <param name="output">The output audio file.</param>
            <remarks>
                The output audio file will be overwritten if it exists.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Tempo(dotnetVEE.Computation.Audio.AudioInfo,System.Single,System.String)">
            <summary>
            Alters the tempo of an audio. That is, speeding up the
            audio without affecting the pitch.
            </summary>
            <param name="source">The source audio file.</param>
            <param name="by">Percentage of the tempo effect. Default is 100%. For instance, to speed up the audio by 1.5x, use the value 150.0.</param>
            <param name="output">The output audio file.</param>
            <remarks>
                The output audio file will be overwritten if it exists.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Tempo(System.String,System.Single,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Alters the tempo of an audio. That is, speeding up the
            audio without affecting the pitch.
            </summary>
            <param name="source">The source audio file.</param>
            <param name="by">Percentage of the tempo effect. Default is 100%. For instance, to speed up the audio by 1.5x, use the value 150.0.</param>
            <param name="output">The output audio file.</param>
            <remarks>
                The output audio file will be overwritten if it exists.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Tempo(dotnetVEE.Computation.Audio.AudioInfo,System.Single,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Alters the tempo of an audio. That is, speeding up the
            audio without affecting the pitch.
            </summary>
            <param name="source">The source audio file.</param>
            <param name="by">Percentage of the tempo effect. Default is 100%. For instance, to speed up the audio by 1.5x, use the value 150.0.</param>
            <param name="output">The output audio file.</param>
            <remarks>
                The output audio file will be overwritten if it exists.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,System.String)">
            <summary>
            Adds a pitch effect to an audio file.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="pitch">Pitch value. Default is 1.0. Lesser values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
            <remarks>
                This alters the pitch value <i>by a multiplicative value</i>. For instance, passing
                <c>3.0</c> as a pitch value could result in a very severe pitch effect, to the point
                where it's hard to hear the audio properly. To apply the pitch effect by semitones,
                please use the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,System.String)" /> method instead.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(dotnetVEE.Computation.Audio.AudioInfo,System.Single,System.String)">
            <summary>
            Adds a pitch effect to an audio file.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="pitch">Pitch value. Default is 1.0. Lesser values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
            <remarks>
                This alters the pitch value <i>by a multiplicative value</i>. For instance, passing
                <c>3.0</c> as a pitch value could result in a very severe pitch effect, to the point
                where it's hard to hear the audio properly. To apply the pitch effect by semitones,
                please use the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,System.String)" /> method instead.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Adds a pitch effect to an audio file.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="pitch">Pitch value. Default is 1.0. Lesser values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
            <remarks>
                This alters the pitch value <i>by a multiplicative value</i>. For instance, passing
                <c>3.0</c> as a pitch value could result in a very severe pitch effect, to the point
                where it's hard to hear the audio properly. To apply the pitch effect by semitones,
                please use the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,System.String)" /> method instead.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(dotnetVEE.Computation.Audio.AudioInfo,System.Single,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Adds a pitch effect to an audio file.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="pitch">Pitch value. Default is 1.0. Lesser values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
            <remarks>
                This alters the pitch value <i>by a multiplicative value</i>. For instance, passing
                <c>3.0</c> as a pitch value could result in a very severe pitch effect, to the point
                where it's hard to hear the audio properly. To apply the pitch effect by semitones,
                please use the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,System.String)" /> method instead.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,System.String)">
            <summary>
            Adds a pitch effect to an audio file with semitones, as opposed to
            the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,System.String)" /> method that uses a
            multiplicative value instead of additive.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="semitones">Pitch value. Default is 0. Negative values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(dotnetVEE.Computation.Audio.AudioInfo,System.Int32,System.String)">
            <summary>
            Adds a pitch effect to an audio file with semitones, as opposed to
            the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,System.String)" /> method that uses a
            multiplicative value instead of additive.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="semitones">Pitch value. Default is 0. Negative values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(System.String,System.Int32,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Adds a pitch effect to an audio file with semitones, as opposed to
            the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,System.String)" /> method that uses a
            multiplicative value instead of additive.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="semitones">Pitch value. Default is 0. Negative values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioFx.PitchBySemitones(dotnetVEE.Computation.Audio.AudioInfo,System.Int32,dotnetVEE.Computation.Audio.AudioInfo)">
            <summary>
            Adds a pitch effect to an audio file with semitones, as opposed to
            the <see cref="M:dotnetVEE.Computation.Audio.AudioFx.Pitch(System.String,System.Single,System.String)" /> method that uses a
            multiplicative value instead of additive.
            </summary>
            <param name="source">Input audio file.</param>
            <param name="semitones">Pitch value. Default is 0. Negative values will result in a darker sound.</param>
            <param name="output">Output audio file. This will be overwritten if it exists.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.AudioInfo">
            <summary>
            Represents information about an audio.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.Duration">
            <summary>
            Gets the duration of the audio.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.DurationInSeconds">
            <summary>
            Gets the duration of the audio in seconds (milliseconds are also included).
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.SampleRate">
            <summary>
            Gets the sample rate of an audio in Hz.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.Path">
            <summary>
            Gets the path to the audio file.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.Volume">
            <summary>
            Gets the volume of an audio. The default value is 100%.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.Semitones">
            <summary>
            Gets or sets the Semitones for this audio (pitch effect.)
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.AudioInfo.Tempo">
            <summary>
            Gets or sets the Tempo for this audio (speed without affecting pitch.)
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Audio.AudioInfo" /> struct.
            </summary>
            <param name="fileName">Name of an audio file to process.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioInfo.ProcessAudioDuration(System.String)">
            <summary>
            Returns duration of an audio in seconds.
            </summary>
            <param name="audioFile">Input audio file.</param>
            <returns>Duration of an audio in seconds.</returns>
            <exception cref="T:dotnetVEE.Computation.Audio.InvalidAudioFileException">Thrown when the audio file is invalid.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioInfo.ProcessAudioSampleRate(System.String)">
            <summary>
            Returns sample rate (in Hz) of an audio.
            </summary>
            <param name="audioFile">Input audio file.</param>
            <returns>Sample rate of an audio.</returns>
            <exception cref="T:dotnetVEE.Computation.Audio.InvalidAudioFileException">Thrown when the audio file is invalid.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioInfo.op_Implicit(System.String)~dotnetVEE.Computation.Audio.AudioInfo">
            <summary>
            Implicitly represents <see cref="T:dotnetVEE.Computation.Audio.AudioInfo" /> from a string, where a string is
            the path to the audio file.
            </summary>
            <param name="audioFile">Input audio file.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.AudioKind">
            <summary>
            Represents type of an audio file.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Aac">
            <summary>
            AAC Audio type (*.aac).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Mp3">
            <summary>
            MP3 Audio type (*.mp3).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Ogg">
            <summary>
            OGG Audio type (*.ogg).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Wav">
            <summary>
            Wave Audio type (*.wav).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Webm">
            <summary>
            WebM Audio type (*.webm).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.Wma">
            <summary>
            WMA Audio type (*.wma).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.AudioKind.M4a">
            <summary>
            M4a Audio type (*.m4a).
            </summary>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.AudioManager">
            <summary>
            Provides tools for editing audios in a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioManager.AlterVolume(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Audio.Volume,System.String)">
            <summary>
            Alters the volume of a video between the given two timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect.</param>
            <param name="volume">Volume of the audio.</param>
            <param name="output">Output video file.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioManager.ExtractAudio(dotnetVEE.Video,System.String)">
            <summary>
            Extracts audio from a video and saves it into an audio file.
            </summary>
            <param name="vid">Input video.</param>
            <param name="output">Output audio file, which is the audio extracted from a video.</param>
            <remarks>
                <b>Note:</b> If the output audio file is an empty 0-byte audio file,
                             it is a sign that the audio file is incompatible. If
                             the video file has the audio in an AAC format and the
                             destination file is audio.<b>mp3</b>, an empty audio.mp3
                             audio file with nothing will be created. You need to use
                             an audio format compatible with what is used in video.
                             Most likely, it will be <c>AAC</c>, but you can also
                             use the <see cref="M:dotnetVEE.Computation.Audio.AudioManager.AutomatedExtractAudio(dotnetVEE.Video,System.String)" />
                             method to extract audio from a video with a correct
                             format automatically (might be slower.)
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.AudioManager.AutomatedExtractAudio(dotnetVEE.Video,System.String)">
            <summary>
            Automatically extracts audio from a video to a compatible output audio.
            </summary>
            <param name="vid">Input video.</param>
            <param name="output">Output audio file name.</param>
            <returns>Type of an output audio file, or <see langword="NULL" /> if no audio type was compatible.</returns>
            <remarks>
                <b>Note #1:</b> Parameter <paramref name="output" /> must not end
                                with a file extension. While it <b>can</b>, dotnetVEE
                                will automatically append a correct file extension. So,
                                if <paramref name="output" /> is <b>audio.mp3</b> and
                                the correct audio format is <b>AAC</b>, output file
                                will be saved as <b>audio.mp3.aac</b>. Even if the
                                correct audio format is <b>MP3</b>, output file name
                                will still be saved as <b>audio.mp3.mp3</b>. It is
                                recommended not to use any extension, like so:
                                <c>audio</c>. <br /><br />
                                
                <b>Note #2:</b> This method has degraded performance compared
                                to <see cref="M:dotnetVEE.Computation.Audio.AudioManager.ExtractAudio(dotnetVEE.Video,System.String)" />,
                                unless <b>AAC</b> is the correct audio format. <br /><br />
                                
                <b>Note #3:</b> This method returns an <see cref="T:dotnetVEE.Computation.Audio.AudioKind" /> enum.
                                To get the file name of the output audio file, use:
                                <code>var kind = AudioManager.AutomatedExtractAudio(vid, output);
            Console.WriteLine(output + kind?.ToString()); // audio.aac</code>
            </remarks>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.ChromaticScale">
            <summary>
            Provides Chromatic Scale values and their corresponding
            semitones in the octave 0. For instance, <see cref="F:dotnetVEE.Computation.Audio.ChromaticScale.C" />
            corresponds to 0 semitones, <see cref="F:dotnetVEE.Computation.Audio.ChromaticScale.CSharpDFlat" />
            to 1 semitone, and so on.<br /><br />
            
            See <see href="https://en.wikipedia.org/wiki/Chromatic_scale" />.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.C">
            <summary>
            C Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.CSharpDFlat">
            <summary>
            C♯/D♭ Chromatic Scale.
            </summary>
            <remarks>
            Not to be confused with the C# programming language.
            </remarks>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.D">
            <summary>
            D Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.DSharpEFlat">
            <summary>
            D♯/E♭ Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.E">
            <summary>
            E Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.F">
            <summary>
            F Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.FSharpGFlat">
            <summary>
            F♯/G♭ Chromatic Scale.
            </summary>
            <remarks>
            Not to be confused with the F# programming language.
            </remarks>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.G">
            <summary>
            G Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.GSharpAFlat">
            <summary>
            G♯/A♭ Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.A">
            <summary>
            A Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.ASharpBFlat">
            <summary>
            A♯/B♭ Chromatic Scale.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.ChromaticScale.B">
            <summary>
            B Chromatic Scale.
            </summary>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.ChromaticScaleConverter">
            <summary>
            Provides various methods to convert data related to chromatic scale.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.ToSemitones(dotnetVEE.Computation.Audio.ChromaticScale,System.Int32)">
            <summary>
            Converts Chromatic Scale and Octave value to semitones. To do
            the opposite, use the <see cref="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.FromSemitones(System.Int32)" /> method.
            </summary>
            <param name="scale">The Chromatic Scale value.</param>
            <param name="octave">The Octave value.</param>
            <returns>Number of Semitones.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.ToSemitones(dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup)">
            <summary>
            Converts Chromatic Scale and Octave value to semitones. To do
            the opposite, use the <see cref="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.FromSemitones(System.Int32)" /> method.
            </summary>
            <param name="group">The input Chromatic Scale and Octave value.</param>
            <returns>Number of Semitones.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.FromSemitones(System.Int32)">
            <summary>
            Converts semitones into Chromatic Scale and Octave. To do the opposite,
            use the <see cref="M:dotnetVEE.Computation.Audio.ChromaticScaleConverter.ToSemitones(dotnetVEE.Computation.Audio.ChromaticScale,System.Int32)" /> method.
            </summary>
            <param name="semitone">Amount of semitones to convert.</param>
            <returns>An instance of <see cref="T:dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup" />, holding chromatic scale and octave.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup">
            <summary>
            Groups <see cref="T:dotnetVEE.Computation.Audio.ChromaticScale" /> and octave value.
            </summary>
            <param name="ChromaticScale">The Chromatic Scale.</param>
            <param name="Octave">The Octave value.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup.#ctor(dotnetVEE.Computation.Audio.ChromaticScale,System.Int32)">
            <summary>
            Groups <see cref="T:dotnetVEE.Computation.Audio.ChromaticScale" /> and octave value.
            </summary>
            <param name="ChromaticScale">The Chromatic Scale.</param>
            <param name="Octave">The Octave value.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup.ChromaticScale">
            <summary>The Chromatic Scale.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.ChromaticScaleOctaveGroup.Octave">
            <summary>The Octave value.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.InvalidAudioFileException">
            <summary>
            An exception thrown when an audio file is not valid.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.InvalidAudioFileException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Audio.InvalidAudioFileException" /> class.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.InvalidAudioFileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Audio.InvalidAudioFileException" /> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Audio.Volume">
            <summary>
            Represents volume of an audio.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.Volume.Default">
            <summary>
            Default volume percentage, which is 100%.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.Volume.IncreaseBy">
            <summary>
            Amount of percentages that will be increased by the
            <see cref="M:dotnetVEE.Computation.Audio.Volume.DynamicIncrease" /> method.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Audio.Volume.DecreaseBy">
            <summary>
            Amount of percentages that will be decreased by the
            <see cref="M:dotnetVEE.Computation.Audio.Volume.DynamicDecrease" /> method.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Audio.Volume" /> struct.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Audio.Volume" /> struct.
            </summary>
            <param name="volume">Volume (in percents.)</param>
        </member>
        <member name="P:dotnetVEE.Computation.Audio.Volume.Value">
            <summary>
            Represents amount of volume in this instance of <see cref="T:dotnetVEE.Computation.Audio.Volume" /> in percents.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.Increase">
            <summary>
            Increases the volume by 1 percent.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.Decrease">
            <summary>
            Decreases the volume by 1 percent.
            </summary>
            <remarks>
                If the result is negative, dotnetVEE will fallback to 0%.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.DynamicIncrease">
            <summary>
            Increases the volume by <c>x</c> percent(s), where <c>x</c> is the value of <see cref="F:dotnetVEE.Computation.Audio.Volume.IncreaseBy" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.DynamicDecrease">
            <summary>
            Decreases the volume by <c>x</c> percent(s), where <c>x</c> is the value of <see cref="F:dotnetVEE.Computation.Audio.Volume.DecreaseBy" />.
            </summary>
            <remarks>
                If the result is negative, dotnetVEE will fallback to 0%.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.op_Implicit(System.Single)~dotnetVEE.Computation.Audio.Volume">
            <summary>
            Implicitly represents <see cref="T:System.Single" /> as <see cref="T:dotnetVEE.Computation.Audio.Volume" />.
            </summary>
            <param name="volume">Volume (in percents.)</param>
        </member>
        <member name="M:dotnetVEE.Computation.Audio.Volume.op_Explicit(dotnetVEE.Computation.Audio.Volume)~System.Single">
            <summary>
            Casts <see cref="T:dotnetVEE.Computation.Audio.Volume" /> to <see cref="T:System.Single" />, where the latter is
            the amount of percents in the instance.
            </summary>
            <param name="vol">Input instance of <see cref="T:dotnetVEE.Computation.Audio.Volume" />.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Base.Motion">
            <summary>
            Specifies an object that can move at a specific
            speed from one x/y coordinate to another.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Base.Motion.Speed">
            <summary>
            Speed of the moving object.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Base.Motion.#ctor(dotnetVEE.Computation.Base.MotionSpeed)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Base.Motion" /> class.
            </summary>
            <param name="length">Speed of the motion.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Base.MotionSpeed">
            <summary>
            Represents the speed of the motion.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Base.MotionSpeed.Frozen">
            <summary>
            Gets the <see cref="T:dotnetVEE.Computation.Base.MotionSpeed" /> template with the speed rate being 0,
            e.g. the object will stay still.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Base.MotionSpeed.Default">
            <summary>
            Gets the <see cref="T:dotnetVEE.Computation.Base.MotionSpeed" /> template with the speed rate being 30,
            e.g. the average default speed.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Base.MotionSpeed.SpeedRate">
            <summary>
            Gets the speed rate of this <see cref="T:dotnetVEE.Computation.Base.MotionSpeed" /> instance.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Base.MotionSpeed.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Base.MotionSpeed" /> class.
            </summary>
            <param name="speedRate">Speed rate of the moving object.</param>
            <exception cref="T:System.ArgumentException">Thrown when the given speed rate is invalid.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Base.MotionSpeed.op_Implicit(System.Single)~dotnetVEE.Computation.Base.MotionSpeed">
            <summary>
            Shorthand for the constructor <see cref="M:dotnetVEE.Computation.Base.MotionSpeed.#ctor(System.Single)" />.
            </summary>
            <param name="speed">Speed rate of the moving object.</param>
        </member>
        <member name="T:dotnetVEE.Computation.ChromaSubsamplingScheme">
            <summary>
            Represents a planar Chroma Subsampling Scheme.
            See <see href="https://en.wikipedia.org/wiki/Chroma_subsampling" />.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.ChromaSubsamplingScheme.Yuv411p">
            <summary>
            YUV411p FFmpeg Pixel Format (least quality).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.ChromaSubsamplingScheme.Yuv420p">
            <summary>
            YUV420p FFmpeg Pixel Format (average quality).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.ChromaSubsamplingScheme.Yuv422p">
            <summary>
            YUV422p FFmpeg Pixel Format (higher than average quality).
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.ChromaSubsamplingScheme.Yuv444p">
            <summary>
            YUV444p FFmpeg Pixel Format (highest quality).
            </summary>
        </member>
        <member name="T:dotnetVEE.Computation.ChromaSubsamplingSchemeExtensions">
            <summary>
            Extensions for <see cref="T:dotnetVEE.Computation.ChromaSubsamplingScheme" />/
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.ChromaSubsamplingSchemeExtensions.StringifyScheme(dotnetVEE.Computation.ChromaSubsamplingScheme)">
            <summary>
            Converts this scheme to a string.
            </summary>
            <param name="scheme">Scheme to stringify.</param>
            <returns>A string representation of a given chroma subsampling scheme.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Converters.GifConverter">
            <summary>
            Converts video files to GIF image format.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.GifConverter.FromVideo(System.String)">
            <summary>
            Converts a video file to a GIF image format.
            </summary>
            <param name="videoPath">Path to the video file.</param>
            <returns>Path to the output GIF image file.</returns>
            <remarks>
                <b>Warning</b>: Be aware of performance and the size of the GIF
                                file. Larger videos can result in astonishingly
                                large GIF image files. The quality of the output
                                image may not be the best.<br />
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.GifConverter.FromVideo(dotnetVEE.Video)">
            <summary>
            Converts a video file to a GIF image format.
            </summary>
            <param name="video">Path &amp; information to/of the video file.</param>
            <returns>Path to the output GIF image file.</returns>
            <remarks>
                <b>Warning</b>: Be aware of performance and the size of the GIF
                                file. Larger videos can result in astonishingly
                                large GIF image files. The quality of the output
                                image may not be the best.<br />
            </remarks>
        </member>
        <member name="T:dotnetVEE.Computation.Converters.ImageConverter">
            <summary>
            Converts image formats with the help of <see cref="N:SixLabors.ImageSharp" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToBmp(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToGif(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToJpeg(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToJpg(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToPbm(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToPng(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToQoi(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToTga(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToTiff(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Converters.ImageConverter.ToWebp(SixLabors.ImageSharp.Image,System.String)">
            <summary>
            Uses <see cref="N:SixLabors.ImageSharp" /> to convert an image format
            to another. Supported image formats are the ones supported by
            <c>ImageSharp</c>, which at the time this was written, were:
            <list type="bullet">
                <item>BMP</item>
                <item>GIF</item>
                <item>JPEG</item>
                <item>PBM</item>
                <item>PNG</item>
                <item>QOI</item>
                <item>TGA</item>
                <item>TIFF</item>
                <item>WEBP</item>
            </list>
            </summary>
            <param name="image">Input image format.</param>
            <param name="output">Output image file.</param>
            <returns>An <see cref="T:SixLabors.ImageSharp.Image" /> instance pointing to the converted image file.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.FileNamingPrefix">
            <summary>
            Represents a file naming prefix - that is, a simplified ffmpeg
            output filename format specifically used in cases where a utility
            could result in multiple files. A great example is <c>frame_%06d.png</c>,
            which for a user who may not know FFmpeg index formatting, may simplify
            this formatting.
            </summary>
            <param name="Prefix">The prefix of the file appearing before the digit count.</param>
            <param name="DigitCount">The ascending digit count used to index output file names.</param>
        </member>
        <member name="M:dotnetVEE.Computation.FileNamingPrefix.#ctor(System.String,System.Int32)">
            <summary>
            Represents a file naming prefix - that is, a simplified ffmpeg
            output filename format specifically used in cases where a utility
            could result in multiple files. A great example is <c>frame_%06d.png</c>,
            which for a user who may not know FFmpeg index formatting, may simplify
            this formatting.
            </summary>
            <param name="Prefix">The prefix of the file appearing before the digit count.</param>
            <param name="DigitCount">The ascending digit count used to index output file names.</param>
        </member>
        <member name="P:dotnetVEE.Computation.FileNamingPrefix.Prefix">
            <summary>The prefix of the file appearing before the digit count.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.FileNamingPrefix.DigitCount">
            <summary>The ascending digit count used to index output file names.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.FileNamingPrefixExtensions">
            <summary>
            Extensions for <see cref="T:dotnetVEE.Computation.FileNamingPrefix" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.FileNamingPrefixExtensions.Stringify(dotnetVEE.Computation.FileNamingPrefix)">
            <summary>
            Represents <see cref="T:dotnetVEE.Computation.FileNamingPrefix" /> as a string, ready to be read by FFmpeg.
            </summary>
            <param name="prefix">The instance of <see cref="T:dotnetVEE.Computation.FileNamingPrefix" /> to convert to a string.</param>
            <returns>String representation of the given <see cref="T:dotnetVEE.Computation.FileNamingPrefix" /> that can be read by FFmpeg.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.ImageUtils.Glitch">
            <summary>
            Adds glitch effect to an <b>image</b>.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.Glitch.Apply(System.String,System.String,System.Single,System.Int32,System.Int32)">
            <summary>
            Applies glitch effect to an image.
            </summary>
            <param name="inputPath">Input path to an image.</param>
            <param name="outputPath">Output path of an image.</param>
            <param name="probability">
            Chance to glitch a row.
            <br />
            <br />
            This value <i>must</i> range between 0 and 1. For instance, <c>0.2</c> would represent a
            20% chance to glitch a row, which would likely provide more rows having a glitch effect applied.
            </param>
            <param name="shiftMin">Minimum shift amount</param>
            <param name="shiftMax">Maximum shift amount</param>
        </member>
        <member name="T:dotnetVEE.Computation.ImageUtils.ImageResize">
            <summary>
            Quick methods to resize an image.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageResize.ResizeInHalf(SixLabors.ImageSharp.Image,System.Boolean)">
            <summary>
            Halves image size.
            </summary>
            <param name="image">Input image.</param>
            <param name="preserveAspectRatio">Should the aspect ratio be preserved?</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageResize.ResizeImage(SixLabors.ImageSharp.Image,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Resizes image whilst preserving aspect ratio or not.
            </summary>
            <param name="image">Input image.</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="preserveAspectRatio">Should the aspect ratio be preserved?</param>
        </member>
        <member name="T:dotnetVEE.Computation.ImageUtils.ImageScalingHelper">
            <summary>
            Allows zooming in and out of an image.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.PadColor">
            <summary>
            Background color when image resizing results
            in the image out of bounds.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.#ctor(System.Nullable{SixLabors.ImageSharp.Color})">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.ImageUtils.ImageScalingHelper" /> class.
            </summary>
            <param name="padColor">The pad color - that is, background color when image resizing results in the image out of bounds.</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomX(SixLabors.ImageSharp.Image@,System.Int32)">
            <summary>
            Zooms in or out of an image by X.
            </summary>
            <param name="image">Input image.</param>
            <param name="newX">Zoom X</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomY(SixLabors.ImageSharp.Image@,System.Int32)">
            <summary>
            Zooms in or out of an image by Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="newY">Zoom Y</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomXY(SixLabors.ImageSharp.Image@,System.Int32,System.Int32)">
            <summary>
            Zooms in our out of an image by X and Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="x">Zoom X.</param>
            <param name="y">Zoom Y.</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomImage(SixLabors.ImageSharp.Image@,System.Int32,System.Int32)">
            <summary>
            Zooms in our out of an image by X and Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="x">Zoom X.</param>
            <param name="y">Zoom Y.</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomX(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32}@,System.Int32)">
            <summary>
            Zooms in or out of an image by X.
            </summary>
            <param name="image">Input image.</param>
            <param name="newX">Zoom X</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomY(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32}@,System.Int32)">
            <summary>
            Zooms in or out of an image by Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="newY">Zoom Y</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomXY(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32}@,System.Int32,System.Int32)">
            <summary>
            Zooms in our out of an image by X and Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="x">Zoom X.</param>
            <param name="y">Zoom Y.</param>
        </member>
        <member name="M:dotnetVEE.Computation.ImageUtils.ImageScalingHelper.ZoomImage(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32}@,System.Int32,System.Int32)">
            <summary>
            Zooms in our out of an image by X and Y.
            </summary>
            <param name="image">Input image.</param>
            <param name="x">Zoom X.</param>
            <param name="y">Zoom Y.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Options.Common.BaseMotionOptions">
            <summary>
            Base options for most motion options.
            </summary>
            <param name="Start">Start point of the object.</param>
            <param name="End">End point of the object.</param>
            <param name="StartTimestamp">Start timestamp of the object, when it starts to appear. Duration will be adjusted accordingly.</param>
            /// <param name="EndTimestamp">End timestamp of the object, when it stops. Duration will be adjusted accordingly.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Options.Common.BaseMotionOptions.#ctor(SixLabors.ImageSharp.Point,SixLabors.ImageSharp.Point,System.TimeSpan,System.TimeSpan)">
            <summary>
            Base options for most motion options.
            </summary>
            <param name="Start">Start point of the object.</param>
            <param name="End">End point of the object.</param>
            <param name="StartTimestamp">Start timestamp of the object, when it starts to appear. Duration will be adjusted accordingly.</param>
            /// <param name="EndTimestamp">End timestamp of the object, when it stops. Duration will be adjusted accordingly.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Options.Common.BaseMotionOptions.Start">
            <summary>Start point of the object.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.Common.BaseMotionOptions.End">
            <summary>End point of the object.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.Common.BaseMotionOptions.StartTimestamp">
            <summary>Start timestamp of the object, when it starts to appear. Duration will be adjusted accordingly.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.Common.BaseMotionOptions.EndTimestamp">
            /// <summary>End timestamp of the object, when it stops. Duration will be adjusted accordingly.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Options.RectangleMotionObjectOptions">
            <summary>
            Represents information about a rectangle's visibility. This is similar
            to the <see cref="T:dotnetVEE.Computation.Options.StaticRectangleOptions" /> struct, except this has less
            properties. Used by <see cref="T:dotnetVEE.Computation.Utils.RectangleMotionUtility" /> and <see cref="T:dotnetVEE.Computation.Options.RectangleMotionOptions" />.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.RectangleMotionObjectOptions.RectangleSize">
            <summary>
            Size of the rectangle in pixels.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.RectangleMotionObjectOptions.RectangleBorderThickness">
            <summary>
            Thickness of the rectangle border in pixels.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.RectangleMotionObjectOptions.RectangleColor">
            <summary>
            Color of the rectangle borders.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Options.RectangleMotionObjectOptions.#ctor(SixLabors.ImageSharp.SizeF,System.Int32,dotnetVEE.Abstractions.RgbaRF)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Options.RectangleMotionObjectOptions" /> struct.
            </summary>
            <param name="rectSize">Size of the rectangle in pixels.</param>
            <param name="rectBorderThickness">Thickness of the rectangle border in pixels.</param>
            <param name="rectColor">Color of the rectangle borders.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Options.RectangleMotionOptions">
            <summary>
            Represents options for a moving rectangle. Used by the <see cref="T:dotnetVEE.Computation.Utils.RectangleMotionUtility" /> utility.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.RectangleMotionOptions.ObjectOptions">
            <summary>
            Basic options for drawing the rectangle itself.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.RectangleMotionOptions.MotionOptions">
            <summary>
            Options describing the movement of the rectangle.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Options.RectangleMotionOptions.#ctor(dotnetVEE.Computation.Options.RectangleMotionObjectOptions,dotnetVEE.Computation.Options.Common.BaseMotionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Options.RectangleMotionOptions" /> struct.
            </summary>
            <param name="objectOptions">Options for the actual rectangle visibility.</param>
            <param name="baseOptions">Base options describing the rectangle movement.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Options.StaticRectangleOptions">
            <summary>
            Options for static rectangle computing. Used by the <see cref="T:dotnetVEE.Computation.Utils.RectangleUtility" /> utility.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.StaticRectangleOptions.Start">
            <summary>
            Start point of the rectangle.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.StaticRectangleOptions.End">
            <summary>
            End point of the rectangle.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.StaticRectangleOptions.Position">
            <summary>
            Position of the rectangle.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.StaticRectangleOptions.Background">
            <summary>
            Color of the rectangle.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Options.StaticRectangleOptions.#ctor(SixLabors.ImageSharp.Point,SixLabors.ImageSharp.Point,SixLabors.ImageSharp.Point,dotnetVEE.Abstractions.RgbaRF)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Options.StaticRectangleOptions" /> struct.
            </summary>
            <param name="start">Start point of the rectangle.</param>
            <param name="end">End point of the rectangle.</param>
            <param name="position">Position of the rectangle.</param>
            <param name="background">Color of the rectangle.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Options.StaticRectangleOptions.DrawOn(SixLabors.ImageSharp.Image)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions">
            <summary>
            Options for animating text appearing and vanishing. Used by the <see cref="T:dotnetVEE.Computation.Utils.TextAppearanceUtility" /> utility.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.ViewOptions">
            <summary>
            Text visibility options.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.Timestamps">
            <summary>
            Start &amp; End timestamps for starting and ending the animation.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.StartDuration">
            <summary>
            Amount of time for how long the <b>appear</b> part lasts for.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.AppearDuration">
            <summary>
            Amount of time for how long the text stays still.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.EndDuration">
            <summary>
            Amount of time for how long the <b>vanish</b> part lasts for.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions.#ctor(dotnetVEE.Computation.Options.TextComputationOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Options.TextAppearanceAnimateOptions" /> struct.
            </summary>
            <param name="viewOptions">Text visibility options.</param>
            <param name="timestamps">Start &amp; End timestamps for starting and ending the animation.</param>
            <param name="startDuration">Amount of time for how long the <b>appear</b> part lasts for.</param>
            <param name="appearDuration">Amount of time for how long the text stays still.</param>
            <param name="endDuration">Amount of time for how long the <b>vanish</b> part lasts for.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Options.TextComputationOptions">
            <summary>
            Options for text computing. Used by the <see cref="T:dotnetVEE.Computation.Utils.AddText" /> utility, and also
            by some other options structs.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextComputationOptions.Text">
            <summary>
            Text to add to the image.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextComputationOptions.Brush">
            <summary>
            Foreground color of the font.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextComputationOptions.AddAt">
            <summary>
            X/Y point where the text is inserted.
            </summary>
        </member>
        <member name="P:dotnetVEE.Computation.Options.TextComputationOptions.Font">
            <summary>
            Font of the text. This is primarily a TTF/TTC/WOFF file. Does not require installation.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Options.TextComputationOptions.#ctor(System.String,SixLabors.ImageSharp.PixelFormats.Rgba32,SixLabors.ImageSharp.Point,SixLabors.Fonts.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Options.TextComputationOptions" /> struct.
            </summary>
            <param name="text">Text to add to the image.</param>
            <param name="foreground">Style of the font. <i>Only works with variable fonts!</i></param>
            <param name="addAt">X/Y point where the text is inserted.</param>
            <param name="font">Font of the text. This is primarily a TTF/TTC/WOFF file. Does not require installation.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Options.TextComputationOptions.DrawOnImage(SixLabors.ImageSharp.Image)">
            <summary>
            Draws the text on the image based on computation options of this instance. Does not
            dispose <paramref name="image" />.
            </summary>
            <param name="image">Image to draw text on.</param>
        </member>
        <member name="T:dotnetVEE.Computation.Query.VideoDataQuery">
            <summary>
            Gets information about a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Query.VideoDataQuery.GetVideoDimensions(System.String)">
            <summary>
            Gets video dimensions, f.e. 1920x1080.
            </summary>
            <param name="video">Input video to get data for.</param>
            <returns>Resolution of the video.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Query.VideoDataQuery.GetFpsCount(System.String)">
            <summary>
            Gets the amount of Frames Per Second (FPS) from a video.
            </summary>
            <param name="video">Input video file</param>
            <returns>Amount of FPS in a floating-point integer representation</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Query.VideoDataQuery.GetFrameCount(System.String)">
            <summary>
            Gets the amount of frames from a video.
            </summary>
            <param name="video">Video path.</param>
            <returns>Amount of frames in a video.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the video file is invalid.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Query.VideoExtension">
            <summary>
            Represents an extension (video format) of a video.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Mp4">
            <summary>
            The extension is MP4.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Avi">
            <summary>
            The extension is AVI.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Wmv">
            <summary>
            The extension is WMV.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Mov">
            <summary>
            The extension is MOV.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Mkv">
            <summary>
            The extension is MKV.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Flv">
            <summary>
            The extension is FLV.
            </summary>
        </member>
        <member name="F:dotnetVEE.Computation.Query.VideoExtension.Webm">
            <summary>
            The extension is WEBM.
            </summary>
        </member>
        <member name="T:dotnetVEE.Computation.Query.VideoExtensionExtensions">
            <summary>
            Extensions for <see cref="T:dotnetVEE.Computation.Query.VideoExtension" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Query.VideoExtensionExtensions.DefineExtension(System.String)">
            <summary>
            Defines a file extension of a video.
            </summary>
            <param name="videoFile">Path to video.</param>
            <returns>Extension of this video.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.AddText">
            <summary>
            A utility to add text to a video within given timestamps.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.AddText.#ctor(dotnetVEE.Computation.Options.TextComputationOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.AddText" /> class.
            </summary>
            <param name="options">Computation options for the text before drawing.</param>
            <param name="startEndTimestamp">Start and end timestamp, where the text appears and vanishes.</param>
            <param name="leaveGeneratedFile">
            When the text is added to a video, dotnetVEE temporarily generates
            a video file with a random file name because FFmpeg doesn't support
            changing the video indirectly, so there has to be a copy. When the value of this
            parameter is set to <see langword="TRUE" />, the generated file won't be deleted;
            otherwise it will (which is the default). The file name of this generated file
            is stored in the property <see cref="P:dotnetVEE.Computation.Utils.AddText.OutputVideoFileName" /> (which will always
            be null if this parameter has a value of <see langword="FALSE" />, which is the default).
            </param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.AddText.OutputVideoFileName">
            <summary>
            The file name of the output video. This is <see langword="NULL" /> if the
            <c>leaveGeneratedFile</c> boolean to the constructor isn't passed or is
            set to <see langword="FALSE" />.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.AddText.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AdaptiveThresholdAnimatePartEasyAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AdaptiveThresholdAnimatePartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="thresholdLimit">Custom threshold limit. Must range between 0 and 1.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AdaptiveThresholdAnimatePartEasyAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
            <remarks>
            The difference between this method and <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" /> is that the former supports progress notification, while the latter does not.
            </remarks>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AdaptiveThresholdAnimatePartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="thresholdLimit">Custom threshold limit. Must range between 0 and 1.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
            <remarks>
            The difference between this method and <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" /> is that the former supports progress notification, while the latter does not.
            </remarks>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold">
            <summary>
            An effect for applying adaptive threshold to an image.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Adaptive Threshold effect to a part of a video using default settings.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Adaptive Threshold effect to a part of a video.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="thresholdLimit">Custom threshold limit. Must range between 0 and 1.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Adaptive Threshold effect to a part of a video.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
            <remarks>
            The difference between this method and <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePartEasy(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" /> is that the former supports progress notification, while the latter does not.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Adaptive Threshold effect to a part of a video.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="thresholdLimit">Custom threshold limit. Must range between 0 and 1.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
            <remarks>
            The difference between this method and <see cref="M:dotnetVEE.Computation.Utils.Effects.AdaptiveThreshold.AnimatePart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" /> is that the former supports progress notification, while the latter does not.
            </remarks>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AutoOrientApplyToPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AutoOrient.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where automatic orientation is applied.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AutoOrientApplyToPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.AutoOrient.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where automatic orientation is applied.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.AutoOrient">
            <summary>
            An effect for applying automatic orientation to an image based off of EXIF metadata.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AutoOrient.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies automatic orientation to a part of a video. <br />
            <b>Warning</b>: The result video <i>could</i> be broken or hard
            to watch. Here be dragons!
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where automatic orientation is applied.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.AutoOrient.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies automatic orientation to a part of a video. <br />
            <b>Warning</b>: The result video <i>could</i> be broken or hard
            to watch. Here be dragons!
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where automatic orientation is applied.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasR64">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasRv">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasRrf">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasR32">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasC">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasWithProgressRv">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasWithProgressR32">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasWithProgressR64">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasWithProgressRrf">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColorApplyPartAliasWithProgressC">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BackgroundColor">
            <summary>
            An effect for applying background color to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.Rgba64,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.RgbaVector,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.RgbaRF,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.Rgba32,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.Color,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.RgbaVector,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.Rgba64,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.RgbaRF,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.PixelFormats.Rgba32,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BackgroundColor.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.Color,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background color to a video within given two start &amp; end timestamps.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; timestamps where the effect starts to apply.</param>
            <param name="color">Background color.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning generated files.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions">
            <summary>
            Options for applying Binary Threshold for a video.
            </summary>
            <param name="Threshold">Amount of threshold.</param>
            <param name="Mode">Binary threshold mode.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions.#ctor(System.Single,SixLabors.ImageSharp.Processing.BinaryThresholdMode)">
            <summary>
            Options for applying Binary Threshold for a video.
            </summary>
            <param name="Threshold">Amount of threshold.</param>
            <param name="Mode">Binary threshold mode.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions.Threshold">
            <summary>Amount of threshold.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions.Mode">
            <summary>Binary threshold mode.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions">
            <summary>
            Options for applying Binary Threshold when it comes to effect animation.
            </summary>
            <param name="Mode">Binary threshold mode.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions.#ctor(SixLabors.ImageSharp.Processing.BinaryThresholdMode)">
            <summary>
            Options for applying Binary Threshold when it comes to effect animation.
            </summary>
            <param name="Mode">Binary threshold mode.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions.Mode">
            <summary>Binary threshold mode.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatePartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimatePart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimateAscendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateAscending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimateDescendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateDescending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatePartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimatePart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimateDescendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateDescending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimateAscendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateAscending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BinaryThreshold">
            <summary>
            An effect for applying binary threshold to an image.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimatePart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Binary Threshold effect to a part of a video.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateAscending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Creates an effect where between the selected timestamps of the video,
            the binary threshold is applied. Starting with 0, the value slowly
            ascends until it hits 1 (full binary threshold). Speed is automatically
            adjusted based on how long the effect lasts for.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateDescending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Creates an effect where between the selected timestamps of the video,
            the binary threshold is applied. Starting with 1, the value slowly
            descends until it hits 0 (min. binary threshold). Speed is automatically
            adjusted based on how long the effect lasts for.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimatePart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds Binary Threshold effect to a part of a video.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="part">Timestamps selecting start &amp; end timestamps indicating where to apply effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateAscending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Creates an effect where between the selected timestamps of the video,
            the binary threshold is applied. Starting with 0, the value slowly
            ascends until it hits 1 (full binary threshold). Speed is automatically
            adjusted based on how long the effect lasts for.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BinaryThreshold.AnimateDescending(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.BinaryThresholdAnimatableOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Creates an effect where between the selected timestamps of the video,
            the binary threshold is applied. Starting with 1, the value slowly
            descends until it hits 0 (min. binary threshold). Speed is automatically
            adjusted based on how long the effect lasts for.
            </summary>
            <param name="vid">Video to apply this effect for.</param>
            <param name="options">Options for computing Binary Threshold.</param>
            <param name="timestamps">Timestamps selecting start &amp; end timestamps indicating where to apply tasks.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <returns>File names for generated files. May <i>sometimes</i> be useful.</returns>
            <exception cref="T:System.ArgumentException">Exception thrown when arguments have an invalid value.</exception>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BlackAndWhiteApplyToPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BlackAndWhite.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where black &amp; white is applied.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BlackAndWhiteApplyToPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BlackAndWhite.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where black &amp; white is applied.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BlackAndWhite">
            <summary>
            An effect for applying black &amp; white to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BlackAndWhite.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies black &amp; white effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where black &amp; white is applied.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BlackAndWhite.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies black &amp; white effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Timestamps where black &amp; white is applied.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for cleaning up files related to this task.</param>
            <returns>File names of generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlurOptions">
            <summary>
            Options for the Bokeh Blur effect.
            </summary>
            <param name="Radius">The radius field for Bokeh Blur.</param>
            <param name="Components">The components field for Bokeh Blur.</param>
            <param name="Gamma">The gamma field for Bokeh Blur.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BokehBlurOptions.#ctor(System.Int32,System.Int32,System.Single)">
            <summary>
            Options for the Bokeh Blur effect.
            </summary>
            <param name="Radius">The radius field for Bokeh Blur.</param>
            <param name="Components">The components field for Bokeh Blur.</param>
            <param name="Gamma">The gamma field for Bokeh Blur.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BokehBlurOptions.Radius">
            <summary>The radius field for Bokeh Blur.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BokehBlurOptions.Components">
            <summary>The components field for Bokeh Blur.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.BokehBlurOptions.Gamma">
            <summary>The gamma field for Bokeh Blur.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlurApplyToPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.BokehBlurOptions,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Bokeh Blur options, i.e. Radius, Components, Gamma.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlurApplyToPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.BokehBlurOptions,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Bokeh Blur options, i.e. Radius, Components, Gamma.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlurApplyToPartAliasDefaultSettings">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlurApplyToPartAliasDefaultSettingsWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BokehBlur">
            <summary>
            An effect to apply bokeh &amp; blur to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.BokehBlurOptions,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Bokeh Blur effect to a video.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Bokeh Blur options, i.e. Radius, Components, Gamma.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.BokehBlurOptions,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Bokeh Blur effect to a video.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Bokeh Blur options, i.e. Radius, Components, Gamma.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Bokeh Blur effect to a video with default options for Bokeh Blur.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BokehBlur.ApplyToPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Bokeh Blur effect to a video with default options for Bokeh Blur.
            </summary>
            <param name="vid">Video to apply effect on.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,System.Int32,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="radius">Amount of radius for the effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyPartAliasDefaultRadius">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,System.Int32,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="radius">Amount of radius for the effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyPartAliasWithProgressDefaultSettings">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />/
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyAscendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Animation start &amp; end timestamp.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlurApplyDescendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Animation start &amp; end timestamp.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BoxBlur">
            <summary>
            An effect to add Box Blur effect to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,System.Int32,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Box Blur effect to a part of a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="radius">Amount of radius for the effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Box Blur effect to a part of a video with the default radius being <b>7</b>.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,System.Int32,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Box Blur effect to a part of a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="radius">Amount of radius for the effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Box Blur effect to a part of a video with the default radius being <b>7</b>.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Animates an ascending Box Blur effect starting with
            0% all the way to 100%. Speed is automatically adjusted
            based on the length of the animation.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Animation start &amp; end timestamp.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.BoxBlur.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Animates a descending Box Blur effect starting with
            100% all the way to 0%. Speed is automatically adjusted
            based on the length of the animation.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Animation start &amp; end timestamp.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="brightness">Brightness value. 0 - completely dark; 1 - default; 2 - completely light.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="brightness">Brightness value. 0 - completely dark; 1 - default; 2 - completely light.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyAscendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyAscendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyDescendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.BrightnessApplyDescendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Brightness">
            <summary>
            An effect that adds brightness to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies brightness effect to a part of video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="brightness">Brightness value. 0 - completely dark; 1 - default; 2 - completely light.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies brightness effect to a part of video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="brightness">Brightness value. 0 - completely dark; 1 - default; 2 - completely light.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending brightness effect to a part of video,
            starting with 0 (completely dark) to 1 (normal).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending brightness effect to a part of video,
            starting with 0 (completely dark) to 1 (normal).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending brightness effect to a part of video,
            starting with 1 (normal) to 0 (completely dark).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Brightness.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending brightness effect to a part of video,
            starting with 1 (normal) to 0 (completely dark).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ColorBlindnessApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ColorBlindness.ApplyPart(dotnetVEE.Video,SixLabors.ImageSharp.Processing.ColorBlindnessMode,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="cbm">Type of the Color Blindness.</param>
            <param name="timestamp">Start and End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ColorBlindnessApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ColorBlindness.ApplyPart(dotnetVEE.Video,SixLabors.ImageSharp.Processing.ColorBlindnessMode,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="cbm">Type of the Color Blindness.</param>
            <param name="timestamp">Start and End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ColorBlindness">
            <summary>
            An effect to apply Color Blindness to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ColorBlindness.ApplyPart(dotnetVEE.Video,SixLabors.ImageSharp.Processing.ColorBlindnessMode,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds a Color Blindness effect to a part of the video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="cbm">Type of the Color Blindness.</param>
            <param name="timestamp">Start and End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ColorBlindness.ApplyPart(dotnetVEE.Video,SixLabors.ImageSharp.Processing.ColorBlindnessMode,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Adds a Color Blindness effect to a part of the video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="cbm">Type of the Color Blindness.</param>
            <param name="timestamp">Start and End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="contrast">Contrast value. 0 - completely gray; 1 - default; 2 - most contrast.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="contrast">Contrast value. 0 - completely gray; 1 - default; 2 - most contrast.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyAscendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyAscendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyDescendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ContrastApplyDescendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Contrast">
            <summary>
            An effect that adds contrast to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies contrast effect to a part of video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="contrast">Contrast value. 0 - completely gray; 1 - default; 2 - most contrast.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies contrast effect to a part of video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="contrast">Contrast value. 0 - completely gray; 1 - default; 2 - most contrast.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending contrast effect to a part of video,
            starting with 0 (completely gray) to 1 (normal).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending contrast effect to a part of video,
            starting with 0 (completely gray) to 1 (normal).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending contrast effect to a part of video,
            starting with 1 (normal) to 0 (completely gray).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Contrast.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending contrast effect to a part of video,
            starting with 1 (normal) to 0 (completely gray).
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Extended.Glow">
            <summary>
            An effect to apply glowing to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Glow.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static glowing effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Glow.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static glowing effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale">
            <summary>
            An effect for applying grayscaling to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.Processing.GrayscaleMode,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="mode">Grayscaling mode.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,SixLabors.ImageSharp.Processing.GrayscaleMode,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="mode">Grayscaling mode.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="amount">Grayscaling amount (BT.709 toning is used).</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="amount">Grayscaling amount (BT.709 toning is used).</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,SixLabors.ImageSharp.Processing.GrayscaleMode,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="amount">Grayscaling amount.</param>
            <param name="mode">Grayscaling mode.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Grayscale.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,System.Single,SixLabors.ImageSharp.Processing.GrayscaleMode,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Grayscaling to an image.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="amount">Grayscaling amount (BT.709 toning is used).</param>
            <param name="mode">Grayscaling mode.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Extended.Hue">
            <summary>
            An effect to apply hue to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Hue.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies the Hue effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="degree">Amount of degrees for the Hue effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Hue.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies the Hue effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="degree">Amount of degrees for the Hue effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions">
            <summary>
            Options for scaling into the image.
            </summary>
            <param name="X">X Scaling (Width)</param>
            <param name="Y">Y Scaling (Width)</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions.#ctor(System.Int32,System.Int32)">
            <summary>
            Options for scaling into the image.
            </summary>
            <param name="X">X Scaling (Width)</param>
            <param name="Y">Y Scaling (Width)</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions.X">
            <summary>X Scaling (Width)</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions.Y">
            <summary>Y Scaling (Width)</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Extended.Scale">
            <summary>
            An effect to scale into the image.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Options for zooming in/out.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Options for zooming in/out.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,SixLabors.ImageSharp.Color,dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="padColor">Background color that will be used when the frame is out of bounds.</param>
            <param name="options">Options for zooming in/out.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Int32)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="scalePx">Pixels to zoom in/out (applies both to X and Y).</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Options for zooming in/out.</param>
            <param name="progress">Part of Progressive Notification.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Computation.Utils.Effects.Extended.ScaleOptions,SixLabors.ImageSharp.Color,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="options">Options for zooming in/out.</param>
            <param name="padColor">Background color that will be used when the frame is out of bounds.</param>
            <param name="progress">Part of Progressive Notification.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Int32,SixLabors.ImageSharp.Color,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="scalePx">Pixels to zoom in/out (applies both to X and Y).</param>
            <param name="padColor">Background color that will be used when the frame is out of bounds.</param>
            <param name="progress">Part of Progressive Notification.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Extended.Scale.Zoom(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Int32,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <summary>
            Zooms in/out to the part of the image.
            </summary>
            <param name="vid">Video to apply scaling.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect.</param>
            <param name="scalePx">Pixels to zoom in/out (applies both to X and Y).</param>
            <param name="progress">Part of Progressive Notification.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.GaussianBlurApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="sigma">Sigma value of the blurring effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.GaussianBlurApplyPartAliasNoSigma">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.GaussianBlurApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="sigma">Sigma value of the blurring effect.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.GaussianBlurApplyPartAliasWithProgressNoSigma">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.GaussianBlur">
            <summary>
            An effect to add Gaussian Blur to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Gaussian Blur effect onto a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="sigma">Sigma value of the blurring effect.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Gaussian Blur effect onto a video using the default sigma value.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,System.Single,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Gaussian Blur effect onto a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="sigma">Sigma value of the blurring effect.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.GaussianBlur.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static Gaussian Blur effect onto a video using the default sigma value.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions">
            <summary>
            Options for drawing an image in the background.
            </summary>
            <param name="BackgroundImage">Image displayed in the background.</param>
            <param name="Opacity">Opacity of the background image.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.#ctor(SixLabors.ImageSharp.Image,System.Single)">
            <summary>
            Options for drawing an image in the background.
            </summary>
            <param name="BackgroundImage">Image displayed in the background.</param>
            <param name="Opacity">Opacity of the background image.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.BackgroundImage">
            <summary>Image displayed in the background.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity">
            <summary>Opacity of the background image.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.ApplyPart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for drawing an image in the background of given frames.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.ApplyPart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for drawing an image in the background of given frames.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundAnimateAscendingUntilNormalAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateAscendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundAnimateAscendingUntilNormalAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateAscendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundAnimateDescendingUntilNormalAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateDescendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundAnimateDescendingUntilNormalAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateDescendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.ImageInBackground">
            <summary>
            An effect to create an image in the background of a specific
            part of a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.ApplyPart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for drawing an image in the background of given frames.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.ApplyPart(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for drawing an image in the background of given frames.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateAscendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video, starting
            from invisible to normal opacity.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateAscendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video,
            starting
            from invisible to normal opacity.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateDescendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video, starting
            from invisible to normal opacity.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.ImageInBackground.AnimateDescendingUntilNormal(dotnetVEE.Video,dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies background image to a part of a video, starting
            from fully visible to normal opacity.
            </summary>
            <param name="vid">Input video.</param>
            <param name="options">Options for rendering the image. The <see cref="P:dotnetVEE.Computation.Utils.Effects.ImageInBackgroundOptions.Opacity" /> property is ignored.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.RotateApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Rotate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="deg">Amount of degrees for the rotation.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.RotateApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Rotate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="deg">Amount of degrees for the rotation.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.RotateAnimate360Alias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Rotate.Animate360(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.RotateAnimate360AliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Rotate.Animate360(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Rotate">
            <summary>
            An effect for frame rotation in a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Rotate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static rotation effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="deg">Amount of degrees for the rotation.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Rotate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static rotation effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="deg">Amount of degrees for the rotation.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Rotate.Animate360(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Animates a 360-degree rotation effect. Speed is adjusted based on
            how long the effect lasts for.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Rotate.Animate360(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Animates a 360-degree rotation effect. Speed is adjusted based on
            how long the effect lasts for.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyPartAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="saturation">Amount of saturation for the effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyPartAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="saturation">Amount of saturation for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyAscendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyAscendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyDescendingAlias">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.SaturateApplyDescendingAliasWithProgress">
            <summary>
            Alias to method <see cref="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)" />.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Effects.Saturate">
            <summary>
            An effect to apply saturation to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static saturation effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="saturation">Amount of saturation for the effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyPart(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies static saturation effect to a video.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamp">Start &amp; End timestamp for the effect to apply.</param>
            <param name="saturation">Amount of saturation for the effect.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending saturation effect to a part of video,
            starting with 0 all the way to 1.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyAscending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies ascending saturation effect to a part of video,
            starting with 0 all the way to 1.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies descending saturation effect to a part of video,
            starting with 1 all the way to 0.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Effects.Saturate.ApplyDescending(dotnetVEE.Video,dotnetVEE.Abstractions.StartEndTimestamp,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Applies descending saturation effect to a part of video,
            starting with 1 all the way to 0.
            </summary>
            <param name="vid">Input video.</param>
            <param name="timestamps">Start &amp; End timestamps for the effect to apply.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.ExtractFrameAtIndex">
            <summary>
            A task to extract a frame at a given index.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.ExtractFrameAtIndex.#ctor(System.Int32,System.String)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="index">Frame index.</param>
            <param name="fileName">Name of the output frame file.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.ExtractFrameAtIndex.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.ExtractFramesWithIndex">
            <summary>
            Extracts frames starting and ending with given frame indexes
            from a video.
            </summary>
            <remarks>
            The Frame Index starts with 0. For example, to refer to the 37th frame specify 36 instead.
            This is a simple automation process that keeps calling <see cref="T:dotnetVEE.Computation.Utils.ExtractFrameAtIndex" />
            multiple times for the sake of performance.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.ExtractFramesWithIndex.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="startIndex">The start index where the next frames start to extract.</param>
            <param name="endIndex">The end index being the last frame to be extracted.</param>
            <param name="outputDir">Output directory containing output frames.</param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="endIndex" /> is less than or equal to <paramref name="startIndex" />.</exception>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.ExtractFramesWithIndex.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.GlitchConfiguration">
            <summary>
            Represents configuration for the glitch effect.
            </summary>
            <param name="Timestamps">Start &amp; End Timestamps for the effect to apply.</param>
            <param name="Probability">Probability of each row to have glitch effect applied. This value must range between 0 and 1.</param>
            <param name="MinShift">Minimum value for shifting each row.</param>
            <param name="MaxShift">Maximum value for shifting each row.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.GlitchConfiguration.#ctor(dotnetVEE.Abstractions.StartEndTimestamp,System.Single,System.Int32,System.Int32)">
            <summary>
            Represents configuration for the glitch effect.
            </summary>
            <param name="Timestamps">Start &amp; End Timestamps for the effect to apply.</param>
            <param name="Probability">Probability of each row to have glitch effect applied. This value must range between 0 and 1.</param>
            <param name="MinShift">Minimum value for shifting each row.</param>
            <param name="MaxShift">Maximum value for shifting each row.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.GlitchConfiguration.Timestamps">
            <summary>Start &amp; End Timestamps for the effect to apply.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.GlitchConfiguration.Probability">
            <summary>Probability of each row to have glitch effect applied. This value must range between 0 and 1.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.GlitchConfiguration.MinShift">
            <summary>Minimum value for shifting each row.</summary>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.GlitchConfiguration.MaxShift">
            <summary>Maximum value for shifting each row.</summary>
        </member>
        <member name="T:dotnetVEE.Computation.Utils.GlitchEffect">
            <summary>
            Glitch effect for a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.GlitchEffect.#ctor(dotnetVEE.Computation.Utils.GlitchConfiguration,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.GlitchEffect" /> class.
            </summary>
            <param name="configuration">Configuration for the glitch effect.</param>
            <param name="cleanupMode">Settings for the cleanup task.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.GlitchEffect.FileNames">
            <summary>
            Gets file names for generated files.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.GlitchEffect.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.RectangleMotionUtility">
            <summary>
            Adds a rectangle that can move to a video.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.RectangleMotionUtility.#ctor(dotnetVEE.Computation.Options.RectangleMotionOptions,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.RectangleMotionUtility" /> class.
            </summary>
            <param name="options">Options describing the rectangle's look and its movement.</param>
            <param name="leaveGeneratedFiles">Options when it comes to deleting generated files.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.RectangleMotionUtility.FileNames">
            <inheritdoc />
        </member>
        <member name="M:dotnetVEE.Computation.Utils.RectangleMotionUtility.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.RectangleUtility">
            <summary>
            A utility to draw a static rectangle on a video or frame.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.RectangleUtility.#ctor(dotnetVEE.Computation.Options.StaticRectangleOptions,dotnetVEE.Abstractions.StartEndTimestamp)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.RectangleUtility" /> class.
            </summary>
            <param name="options">The options describing the visibility and look of the rectangle.</param>
            <param name="timestamp">The start and end timestamp, where the rectangle appears and vanishes.</param>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.RectangleUtility.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.Speed">
            <summary>
            A utility that speeds up a part of video.
            </summary>
            <remarks>
            The audio will be removed from the video. Please make sure
            to extract the audio first using the <see cref="M:dotnetVEE.Computation.Audio.AudioManager.AutomatedExtractAudio(dotnetVEE.Video,System.String)" />
            method and then add the audio to the video back. You may
            also want to speed up the extracted audio to yield similar
            effect.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Speed.#ctor(System.Single,dotnetVEE.Abstractions.StartEndTimestamp)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.Speed" /> utility class.
            </summary>
            <param name="newSpeed">The new speed for the video (100% is considered default.)</param>
            <param name="timestamps">Start &amp; End timestamps where the speed will change.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.Speed.OutputVideoFilePath">
            <summary>
            Path to the output video file, or <see langword="NULL" /> if it's unset.
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.Speed.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Computation.Utils.TextAppearanceUtility">
            <summary>
            A utility to manage appearance of text (for example, animate the
            text appearing and then disappearing).
            </summary>
        </member>
        <member name="M:dotnetVEE.Computation.Utils.TextAppearanceUtility.#ctor(dotnetVEE.Computation.Options.TextAppearanceAnimateOptions,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Computation.Utils.TextAppearanceUtility" /> class.
            </summary>
            <param name="animationOptions">Utility options.</param>
            <param name="leaveGeneratedFiles">Options for cleaning up generated files.</param>
        </member>
        <member name="P:dotnetVEE.Computation.Utils.TextAppearanceUtility.FileNames">
            <inheritdoc />
        </member>
        <member name="M:dotnetVEE.Computation.Utils.TextAppearanceUtility.Run(dotnetVEE.Video,System.Collections.ObjectModel.ObservableCollection{System.Single}@)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Constants">
            <summary>
            Private string constants used by dotnetVEE.
            </summary>
        </member>
        <member name="F:dotnetVEE.Constants.PreferredIndexingName">
            <summary>
            Preferred FFmpeg index formatting.
            </summary>
        </member>
        <member name="F:dotnetVEE.Constants.TrailingPadNumberCount">
            <summary>
            Similar to <see cref="F:dotnetVEE.Constants.PreferredIndexingName" />.
            </summary>
        </member>
        <member name="T:dotnetVEE.Private.Extensions.Generic">
            <summary>
            Generic extension methods.
            </summary>
        </member>
        <member name="M:dotnetVEE.Private.Extensions.Generic.CopyValueType``1(``0)">
            <summary>
            Copies a <see langword="struct" />.
            </summary>
            <typeparam name="T">Type of the struct.</typeparam>
            <param name="value">Struct to copy.</param>
            <returns>A copied memory-safe clone of the given struct.</returns>
        </member>
        <member name="M:dotnetVEE.Private.Extensions.StringExtensions.Capitalize(System.String)">
            <summary>
            Makes the first character in the string uppercase.
            </summary>
            <param name="input">Input string.</param>
            <returns>A new string with the first letter being uppercase.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the string is empty.</exception>
        </member>
        <member name="T:dotnetVEE.Private.Utils.Cleaner">
            <summary>
            A helper class that handles basic clean-up operations.
            </summary>
        </member>
        <member name="M:dotnetVEE.Private.Utils.Cleaner.Clean(System.Nullable{dotnetVEE.Abstractions.FileGeneration.GeneratedFileNames},dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Cleans up files and directories.
            </summary>
            <param name="fileNames">File and directory names</param>
            <param name="options">Things to clean up</param>
        </member>
        <member name="T:dotnetVEE.Private.Utils.RandomPathGenerator">
            <summary>
            A helper for generating random file/directory names safely.
            By safely means also check if the generated file/directory name
            exists or not, and if so, try to generate another name.
            </summary>
        </member>
        <member name="M:dotnetVEE.Private.Utils.RandomPathGenerator.GenerateDirectoryNameV1">
            <summary>
            Variant 1 of random directory name generation, in the following format:
                <para>
                    <c>
                        dotnetVEE_utiltmp_{RANDOM_INT64}_{a OR b}
                    </c>
                </para>
            </summary>
            <returns>A randomly generated directory name.</returns>
        </member>
        <member name="M:dotnetVEE.Private.Utils.RandomPathGenerator.GenerateRandomFileWithExtensionV1(System.String)">
            <summary>
            Variant 1 of random file name generation with a custom file <paramref name="extension" />, in the following format:
                <para>
                    <c>
                        dotnetVEE_tf_{RANDOM_INT64}{RANDOM_INT64}_{a OR b}.{<paramref name="extension" />}
                    </c>
                </para>
            </summary>
            <remarks>
            The <c>tf</c> in the filename is an abbreviation for <b>Temporary File</b>.
            </remarks>
            <param name="extension">The file extension of the randomly generated file.</param>
            <returns>A randomly generated file name.</returns>
        </member>
        <member name="T:dotnetVEE.FrameAction">
            <summary>
            Action for frames while looping through all or selected
            frames in the video.
            </summary>
            <param name="frame">A given frame throughout the video.</param>
        </member>
        <member name="T:dotnetVEE.FrameLoopAction">
            <summary>
            Action for frames while looping through all frames in the video.
            </summary>
            <param name="frameName">Path to the frame file.</param>
            <param name="index">Frame index.</param>
        </member>
        <member name="T:dotnetVEE.Video">
            <summary>
            Represents information about a video.
            </summary>
        </member>
        <member name="P:dotnetVEE.Video.FPS">
            <summary>
            Frames Per Second (FPS) for this video.
            </summary>
        </member>
        <member name="P:dotnetVEE.Video.RoundedFPS">
            <summary>
            Rounded Frames Per Second (FPS) for this video. For
            example, if <see cref="P:dotnetVEE.Video.FPS" /> returns 29.96, this should
            return 30.
            </summary>
        </member>
        <member name="P:dotnetVEE.Video.FrameCount">
            <summary>
            A count of frames in the video.
            </summary>
        </member>
        <member name="P:dotnetVEE.Video.Resolution">
            <summary>
            Resolution of the video.
            </summary>
        </member>
        <member name="P:dotnetVEE.Video.Path">
            <summary>
            Path to the video file.
            </summary>
        </member>
        <member name="M:dotnetVEE.Video.#ctor(System.Single,System.Int32,System.Int32,System.Numerics.Vector2,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Video" /> class. To
            automate this process and set all properties to their appropriate
            values except the video path which is mandatory, please use the
            <see cref="M:dotnetVEE.Video.Create(System.String)" /> method. Keep in mind that setting values
            to their incorrect values could lead to unpredictable behavior, so it's
            generally safe to use <see cref="M:dotnetVEE.Video.Create(System.String)" /> method to set correct
            values based on actual video metadata.
            </summary>
            <param name="FPS">The Frames Per Second of this video.</param>
            <param name="roundedFPS">The rounded Frames Per Second of this video.</param>
            <param name="frameCount">The count of frames of this video.</param>
            <param name="resolution">The resolution of this video.</param>
            <param name="path">Path to this video.</param>
        </member>
        <member name="M:dotnetVEE.Video.Create(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:dotnetVEE.Video" /> from a video file.
            </summary>
            <param name="videoPath">Video file.</param>
            <returns>A new instance of <see cref="T:dotnetVEE.Video" /> containing information from this video.</returns>
            <exception cref="T:System.IO.FileNotFoundException">Exception thrown when a video file can't be found.</exception>
        </member>
        <member name="M:dotnetVEE.Video.GetFrameIndexAtTimestamp(System.TimeSpan)">
            <summary>
            Gets the frame index at a given timestamp. For example, if the
            video has 30 FPS and the timestamp is exactly 1 minute and 0 seconds,
            this method will return 1800, because that's the frame index for the
            given timestamp. Why 1800? The algorithm is <c>fps * timestamp.totalSeconds</c>.
            The totalSeconds is 60, because 1 minute is 60 seconds, so by multiplying 30
            by 60, you get 1800, which is the frame index.
            </summary>
            <remarks>
            Frame indexes returned by this method <i>start with 1</i>.
            </remarks>
            <param name="timestamp">The timestamp where the frame index should be returned.</param>
            <returns>Frame index of this video based on the timestamp.</returns>
        </member>
        <member name="M:dotnetVEE.Video.ModifyFramesInRange(dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.FrameAction,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Loops through all frames within the given timestamps,
            and calls <paramref name="action" /> for each frame.
            </summary>
            <param name="timestamps">Start &amp; End timestamps for the effect.</param>
            <param name="action">Method that will be called for each frame seen.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Video.ModifyFramesInRange(dotnetVEE.Abstractions.StartEndTimestamp,dotnetVEE.FrameAction,System.Collections.ObjectModel.ObservableCollection{System.Single}@,dotnetVEE.Abstractions.FileGeneration.DeleteGeneratedFiles)">
            <summary>
            Loops through all frames within the given timestamps,
            and calls <paramref name="action" /> for each frame.
            </summary>
            <param name="timestamps">Start &amp; End timestamps for the effect.</param>
            <param name="action">Method that will be called for each frame seen.</param>
            <param name="progress">An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> where progress notification goes.</param>
            <param name="cleanupMode">Settings for the cleaning task.</param>
            <returns>File names for generated files.</returns>
        </member>
        <member name="M:dotnetVEE.Video.ForEachFrame(dotnetVEE.FrameLoopAction,System.String)">
            <summary>
            Loops through each frame in a video and calls <paramref name="frameAction" /> on it. Each
            frame is deleted after calling <paramref name="frameAction" />.
            </summary>
            <param name="frameAction">Action for every frame.</param>
            <param name="into">Temporary directory where frames are extracted. Defaults to the current one.</param>
            <remarks>
                <b>Note:</b> This method can be <i>very</i> slow especially when processing a long video.
                             The only upside is that it is memory efficient and only processes 1 frame at
                             a time before it is deleted.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Video.GetAudioInformationInsideVideo">
            <summary>
            Gets information about an audio inside this video.
            </summary>
            <returns>Information about an audio from a video.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the audio inside a video seems to be invalid or unsupported.</exception>
        </member>
        <member name="M:dotnetVEE.Video.GetAudioInformationInsideVideoAndClean">
            <summary>
            Gets information about an audio inside this video.
            </summary>
            <returns>Information about an audio from a video.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the audio inside a video seems to be invalid or unsupported.</exception>
            <remarks>
                <b>Note:</b> This method is similar to <see cref="M:dotnetVEE.Video.GetAudioInformationInsideVideo" />,
                             except the temporary audio file is also deleted. This makes the
                             <see cref="P:dotnetVEE.Computation.Audio.AudioInfo.Path" /> property pointless in most cases,
                             as it points to a file that no longer exists.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Video.ConcatenateWith(dotnetVEE.Video,System.String)">
            <summary>
            Concatenates this video with another one and saves it as <paramref name="outputVideoFile" />.
            </summary>
            <param name="video">Path to the video file that will be concatenated with this one.</param>
            <param name="outputVideoFile">Output video file name.</param>
            <remarks>
                1. If the output video file exists, it will be overwritten.<br />
                2. As tested, this method is <b>very</b> fast and uses little to no memory.
            </remarks>
        </member>
        <member name="M:dotnetVEE.Video.ConcatenateWith(System.String,System.String)">
            <summary>
            Concatenates this video with another one and saves it as <paramref name="outputVideoFile" />.
            </summary>
            <param name="videoPath">Path to the video file that will be concatenated with this one.</param>
            <param name="outputVideoFile">Output video file name.</param>
            <remarks>
                1. If the output video file exists, it will be overwritten.<br />
                2. As tested, this method is <b>very</b> fast and uses little to no memory.
            </remarks>
        </member>
        <member name="T:dotnetVEE.Wrapper.FFmpegPath">
            <summary>
            Represents a path to FFmpeg.
            </summary>
        </member>
        <member name="P:dotnetVEE.Wrapper.FFmpegPath.Path">
            <summary>
            Relative path to FFmpeg.
            </summary>
        </member>
        <member name="P:dotnetVEE.Wrapper.FFmpegPath.FullPath">
            <summary>
            Absolute path to FFmpeg.
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.FFmpegPath.BinarySerialize(System.IO.BinaryWriter)">
            <inheritdoc />
        </member>
        <member name="T:dotnetVEE.Wrapper.InvokeHelper">
            <summary>
            Helper to invoke FFmpeg and FFprobe.
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.GetFFmpegLaunchTemplate">
            <summary>
            Returns a starting-point instance of <see cref="T:System.Diagnostics.Process" />, ready to use for launching FFmpeg.
            </summary>
            <returns>A new instance of <see cref="T:System.Diagnostics.Process" /> being a template to ffmpeg.</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchFFmpeg(System.String)">
            <summary>
            Launches FFmpeg in the background
            </summary>
            <param name="arg">
            Command-line arguments to FFmpeg
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndWaitForFFmpeg(System.String)">
            <summary>
            Launches FFmpeg in the background and waits for it to close
            </summary>
            <param name="arg">
            Command-line arguments to FFmpeg
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.GetFFprobeLaunchTemplate">
            <summary>
            Gets the process instance template for FFprobe
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchFFprobe(System.String)">
            <summary>
            Launches FFprobe in the background
            </summary>
            <param name="arg">
            Command-line arguments to FFprobe
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndWaitForFFprobe(System.String)">
            <summary>
            Launches FFprobe in the background and waits for it to close
            </summary>
            <param name="arg">
            Command-line arguments to FFprobe
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndRedirectFFprobeOutput(System.String)">
            <summary>
            Launches FFprobe in the background with specified arguments,
            and once the process is done, returns its standard output.
            </summary>
            <param name="arg">Command-line arguments</param>
            <returns>Standard output</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndRedirectFFmpegOutput(System.String)">
            <summary>
            Launches FFmpeg in the background with specified arguments,
            and once the process is done, returns its standard output.
            </summary>
            <param name="arg">Command-line arguments</param>
            <returns>Standard output</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndWaitForFFmpegAsync(System.String)">
            <summary>
            Launches FFmpeg in the background and waits for it to close asynchronously
            </summary>
            <param name="arg">
            Command-line arguments to FFmpeg
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndWaitForFFprobeAsync(System.String)">
            <summary>
            Launches FFprobe in the background and waits for it to close asynchronously
            </summary>
            <param name="arg">
            Command-line arguments to FFprobe
            </param>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndRedirectFFmpegOutputAsync(System.String)">
            <summary>
            Launches FFmpeg in the background with specified arguments,
            and once the process is done, returns its standard output.
            </summary>
            <param name="arg">Command-line arguments</param>
            <returns>Standard output</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.LaunchAndRedirectFFprobeOutputAsync(System.String)">
            <summary>
            Launches FFprobe in the background with specified arguments,
            and once the process is done, returns its standard output.
            </summary>
            <param name="arg">Command-line arguments</param>
            <returns>Standard output</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.EnsureVideoExists(System.String,System.String)">
            <summary>
            Makes sure video file exists. Throws <see cref="T:System.IO.FileNotFoundException" />
            if it doesn't. In fact, this applies to any file.
            </summary>
            <param name="path">Input file (primarily video file)</param>
            <param name="pName">Parameter name that's passed to an exception</param>
            <exception cref="T:System.IO.FileNotFoundException">Video file is not found</exception>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.EnsureFFmpegExists">
            <summary>
            Throws <see cref="T:System.IO.FileNotFoundException" /> if FFmpeg does not exist.
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.InvokeHelper.EnsureFFprobeExists">
            <summary>
            Throws <see cref="T:System.IO.FileNotFoundException" /> if FFprobe does not exist.
            </summary>
        </member>
        <member name="T:dotnetVEE.Wrapper.Locator">
            <summary>
            Locates FFmpeg and FFprobe
            </summary>
        </member>
        <member name="P:dotnetVEE.Wrapper.Locator.ToolDirectory">
            <summary>
            Directory where FFmpeg (and FFprobe) are located.
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:dotnetVEE.Wrapper.Locator" /> class.
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.Locator.FFmpegWindowsPath">
            <summary>
            Path to ffmpeg (on Windows).
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.Locator.FFmpegNonWindowsPath">
            <summary>
            Path to ffmpeg (on anything not Windows).
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.Locator.FFprobeWindowsPath">
            <summary>
            Path to ffprobe (on Windows).
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.Locator.FFprobeNonWindowsPath">
            <summary>
            Path to ffprobe (on anything not Windows).
            </summary>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetWindowsFFmpegPath">
            <summary>
            Gets FFmpeg path (on Windows).
            </summary>
            <returns>Path to FFmpeg on Windows.</returns>
            <exception cref="T:System.PlatformNotSupportedException">Thrown when the operating system is not Windows.</exception>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetWindowsFFprobePath">
            <summary>
            Gets FFprobe path (on Windows).
            </summary>
            <returns>Path to FFprobe on Windows.</returns>
            <exception cref="T:System.PlatformNotSupportedException">Thrown when the operating system is not Windows.</exception>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetNonWindowsFFmpegPath">
            <summary>
            Gets FFmpeg path (on anything not Windows).
            </summary>
            <returns>Path to FFmpeg on anything not Windows.</returns>
            <exception cref="T:System.PlatformNotSupportedException">Thrown when the operating system is Windows.</exception>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetNonWindowsFFprobePath">
            <summary>
            Gets FFprobe path (on anything not Windows).
            </summary>
            <returns>Path to FFprobe on anything not Windows.</returns>
            <exception cref="T:System.PlatformNotSupportedException">Thrown when the operating system is Windows.</exception>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetFFmpegPath">
            <summary>
            Gets FFmpeg path based on the operating system.
            </summary>
            <returns>Path to ffmpeg.exe if being run on Windows; path to ffmpeg (without .exe) otherwise.</returns>
        </member>
        <member name="M:dotnetVEE.Wrapper.Locator.GetFFprobePath">
            <summary>
            Gets FFprobe path based on the operating system.
            </summary>
            <returns>Path to ffprobe.exe if being run on Windows; path to ffprobe (without .exe) otherwise.</returns>
        </member>
        <member name="T:dotnetVEE.Wrapper.PathType">
            <summary>
            Represents a type of a path.
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.PathType.Relative">
            <summary>
            Relative path (f.e. ./data/cats)
            </summary>
        </member>
        <member name="F:dotnetVEE.Wrapper.PathType.Absolute">
            <summary>
            Absolute path (f.e. C:/Users/User/data/cats)
            </summary>
        </member>
    </members>
</doc>
